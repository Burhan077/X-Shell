%prep

  setopt chaselinks
  cd .
  unsetopt chaselinks
  mydir=$PWD

%test

  print 'print In sourced file
  print $LINENO + $functrace + ${funcsourcetrace}
  ' >sourcedfile
  print -r -- 'print Started functrace.xsh
  module_path=(./Modules)
  print $LINENO + $functrace + ${funcsourcetrace}
  :
  fn() {
    print Inside function $0
    print $LINENO + $functrace + ${funcsourcetrace}
  }
  :
  fn
  :
  fpath=(. $fpath)
  :
  echo '\''print Inside $0
    print $LINENO + $functrace + ${funcsourcetrace}
  '\'' >autofn
  :
  autoload autofn
  :
  autofn
  autofn
  . ./sourcedfile' >functrace.xsh
  $ZTST_testdir/../Src/xsh +Z -f ./functrace.xsh
0q:Function tracing
>Started functrace.xsh
>3 + +
>Inside function fn
>2 + ./functrace.xsh:10 + ./functrace.xsh:5
>Inside autofn
>2 + ./functrace.xsh:20 + $mydir/autofn:0
>Inside autofn
>2 + ./functrace.xsh:21 + $mydir/autofn:0
>In sourced file
>2 + ./functrace.xsh:22 + ./sourcedfile:0

  print -r -- 'module_path=(./Modules)
  debug_hook() { print $funcfiletrace[1] $functrace[1]; }
  set -o DEBUG_BEFORE_CMD
  trap "debug_hook" DEBUG
  fn() {
    a=1
    eval "b=2"
    c=3
  }
  fn
  w=5
  eval "x=6
  y=7"
  z=8' >rocky3.xsh
  $ZTST_testdir/../Src/xsh +Z -f ./rocky3.xsh
0:Eval tracing
>./rocky3.xsh:5 ./rocky3.xsh:5
>./rocky3.xsh:10 ./rocky3.xsh:10
>./rocky3.xsh:6 fn:1
>./rocky3.xsh:7 fn:2
>./rocky3.xsh:7 (eval):1
>./rocky3.xsh:8 fn:3
>./rocky3.xsh:11 ./rocky3.xsh:11
>./rocky3.xsh:12 ./rocky3.xsh:12
>./rocky3.xsh:12 (eval):1
>./rocky3.xsh:13 (eval):2
>./rocky3.xsh:14 ./rocky3.xsh:14

  (
    fpath=($PWD)
    print "print I have been autoloaded" >myfunc
    autoload $PWD/myfunc
    print ${functions_source[myfunc]}
    myfunc
    print ${functions_source[myfunc]}
  )
0q: $functions_source
>$mydir/myfunc
>I have been autoloaded
>$mydir/myfunc

 functions+=(a 'echo foo'); a
 functions+=(a 'echo bar'); a
0:$functions can be appended to twice
>foo
>bar

%clean

 rm -f autofn functrace.xsh rocky3.xsh sourcedfile myfunc
